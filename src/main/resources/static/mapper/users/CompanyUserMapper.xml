<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.laonworks502.team1st.dao.users.CompanyUserDao">

	<!-- 기업 등록 -->
	<insert id="joinCompany"
		parameterType="com.laonworks502.team1st.model.company.CompanyBean">
		insert into companies
		(company_name,field,postal_code,address1,address2,tel1,tel2,tel3,foundation_date)
		values(#{company_name},#{field},#{postal_code},#{address1},#{address2},#{tel1},#{tel2},#{tel3},#{foundation_date})
	</insert>
	
	<!-- 기업 회원 가입 -->
	<insert id="CompanyjoinUser"
		parameterType="com.laonworks502.team1st.model.users.CompanyUserBean">
		insert into company_users
		(email,passwd,company_name,name,tel1,tel2,tel3,register_date,exit_reason,salt)
		values(#{email},#{passwd},#{company_name},#{name},#{tel1},#{tel2},#{tel3},now(),#{exit_reason},#{salt})
	</insert>

	<!-- 기업 회원 정보 수정 -->
	<update id="amendUser"
		parameterType="com.laonworks502.team1st.model.users.CompanyUserBean">
		update company_users
		set name=#{name},tel1=#{tel1},tel2=#{tel2},tel3=#{tel3}
		where email = #{email}
	</update>

	<!-- email 중복 체크 -->
	<select id="emailCheck" parameterType="String" resultType="int">
		SELECT COUNT(email) FROM (select email from general_users
        union select email from company_users) as gcunion WHERE email = #{email}
	</select>

	<!-- 이메일로 회원 검색 -->
	<select id="getMember" parameterType="String"
		resultType="com.laonworks502.team1st.model.users.CompanyUserBean">
		select email,passwd,company_name,name,tel1,tel2,tel3,register_date,exit_reason,salt
		 from company_users where email = #{email} and exit_reason is null 
	</select>

	<!-- 기업명으로 기업 검색 -->
	<select id="getCompany" parameterType="String"
		resultType="com.laonworks502.team1st.model.company.CompanyBean">
		select company_name, field, postal_code, address1, address2, tel1, tel2, tel3, foundation_date
		 from companies where company_name= #{company_name}
	</select>

	<!--[비번 찾기] 메일 보내기] -->
	<select id="findPasswdUser"
		resultType="com.laonworks502.team1st.model.users.UserBean"
		parameterType="com.laonworks502.team1st.model.users.UserBean">
		select email, passwd
		from 	(select g.email, g.passwd from general_users as g left join company_users as c
				on (g.email = #{email} and g.exit_reason is null)
				union
				select c.email, c.passwd from general_users as g right join company_users as c
				on (c.email = #{email} and c.exit_reason is null)
				)
				as gcunion
		where (email = #{email})
	</select>

	<!-- 기업 회원 탈퇴 -->
	<update id="quitUser">
		update company_users set exit_reason=#{exit_reason} where email=#{email}
	</update>

    <!-- 기업회원의 게시물 전체 개수 -->
    <select id="countAllCompanyPosts" parameterType="String" resultType="int">
        select count(writer) from posts where writer = #{writer}
    </select>

    <!-- 기업회원 글 리스트 불러 오기 -->
    <select id="getCompanyBoardList" resultType="com.laonworks502.team1st.model.post.PostBean">
        select no,board_id,writer,title,date from posts where writer = #{writer} order by no desc
            limit #{startPostNo}, #{PAGES_COUNT}
    </select>

</mapper>